# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import warnings

import grpc
import minecraft_pb2 as minecraft__pb2

GRPC_GENERATED_VERSION = "1.65.4"
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = "1.66.0"
SCHEDULED_RELEASE_DATE = "August 6, 2024"
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower

    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f"The grpc package installed is at version {GRPC_VERSION},"
        + f" but the generated code in minecraft_pb2_grpc.py depends on"
        + f" grpcio>={GRPC_GENERATED_VERSION}."
        + f" Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}"
        + f" or downgrade your generated code using grpcio-tools<={GRPC_VERSION}."
        + f" This warning will become an error in {EXPECTED_ERROR_RELEASE},"
        + f" scheduled for release on {SCHEDULED_RELEASE_DATE}.",
        RuntimeWarning,
    )


class MinecraftStub(object):
    """*
    Service functions on Minecraft Server
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getServerInfo = channel.unary_unary(
            "/protocol.Minecraft/getServerInfo",
            request_serializer=minecraft__pb2.ServerInfoRequest.SerializeToString,
            response_deserializer=minecraft__pb2.ServerInfoResponse.FromString,
            _registered_method=True,
        )
        self.getMaterials = channel.unary_unary(
            "/protocol.Minecraft/getMaterials",
            request_serializer=minecraft__pb2.MaterialRequest.SerializeToString,
            response_deserializer=minecraft__pb2.MaterialResponse.FromString,
            _registered_method=True,
        )
        self.getEntityTypes = channel.unary_unary(
            "/protocol.Minecraft/getEntityTypes",
            request_serializer=minecraft__pb2.EntityTypeRequest.SerializeToString,
            response_deserializer=minecraft__pb2.EntityTypeResponse.FromString,
            _registered_method=True,
        )
        self.runCommand = channel.unary_unary(
            "/protocol.Minecraft/runCommand",
            request_serializer=minecraft__pb2.CommandRequest.SerializeToString,
            response_deserializer=minecraft__pb2.Status.FromString,
            _registered_method=True,
        )
        self.runCommandWithOptions = channel.unary_unary(
            "/protocol.Minecraft/runCommandWithOptions",
            request_serializer=minecraft__pb2.CommandRequest.SerializeToString,
            response_deserializer=minecraft__pb2.CommandResponse.FromString,
            _registered_method=True,
        )
        self.postToChat = channel.unary_unary(
            "/protocol.Minecraft/postToChat",
            request_serializer=minecraft__pb2.ChatPostRequest.SerializeToString,
            response_deserializer=minecraft__pb2.Status.FromString,
            _registered_method=True,
        )
        self.accessWorlds = channel.unary_unary(
            "/protocol.Minecraft/accessWorlds",
            request_serializer=minecraft__pb2.WorldRequest.SerializeToString,
            response_deserializer=minecraft__pb2.WorldResponse.FromString,
            _registered_method=True,
        )
        self.getHeight = channel.unary_unary(
            "/protocol.Minecraft/getHeight",
            request_serializer=minecraft__pb2.HeightRequest.SerializeToString,
            response_deserializer=minecraft__pb2.HeightResponse.FromString,
            _registered_method=True,
        )
        self.getBlock = channel.unary_unary(
            "/protocol.Minecraft/getBlock",
            request_serializer=minecraft__pb2.BlockRequest.SerializeToString,
            response_deserializer=minecraft__pb2.BlockResponse.FromString,
            _registered_method=True,
        )
        self.setBlock = channel.unary_unary(
            "/protocol.Minecraft/setBlock",
            request_serializer=minecraft__pb2.Block.SerializeToString,
            response_deserializer=minecraft__pb2.Status.FromString,
            _registered_method=True,
        )
        self.setBlocks = channel.unary_unary(
            "/protocol.Minecraft/setBlocks",
            request_serializer=minecraft__pb2.Blocks.SerializeToString,
            response_deserializer=minecraft__pb2.Status.FromString,
            _registered_method=True,
        )
        self.setBlockCube = channel.unary_unary(
            "/protocol.Minecraft/setBlockCube",
            request_serializer=minecraft__pb2.Blocks.SerializeToString,
            response_deserializer=minecraft__pb2.Status.FromString,
            _registered_method=True,
        )
        self.getPlayers = channel.unary_unary(
            "/protocol.Minecraft/getPlayers",
            request_serializer=minecraft__pb2.PlayerRequest.SerializeToString,
            response_deserializer=minecraft__pb2.PlayerResponse.FromString,
            _registered_method=True,
        )
        self.setPlayer = channel.unary_unary(
            "/protocol.Minecraft/setPlayer",
            request_serializer=minecraft__pb2.Player.SerializeToString,
            response_deserializer=minecraft__pb2.Status.FromString,
            _registered_method=True,
        )
        self.spawnEntity = channel.unary_unary(
            "/protocol.Minecraft/spawnEntity",
            request_serializer=minecraft__pb2.Entity.SerializeToString,
            response_deserializer=minecraft__pb2.SpawnedEntityResponse.FromString,
            _registered_method=True,
        )
        self.setEntity = channel.unary_unary(
            "/protocol.Minecraft/setEntity",
            request_serializer=minecraft__pb2.Entity.SerializeToString,
            response_deserializer=minecraft__pb2.Status.FromString,
            _registered_method=True,
        )
        self.getEntities = channel.unary_unary(
            "/protocol.Minecraft/getEntities",
            request_serializer=minecraft__pb2.EntityRequest.SerializeToString,
            response_deserializer=minecraft__pb2.EntityResponse.FromString,
            _registered_method=True,
        )
        self.getEventStream = channel.unary_stream(
            "/protocol.Minecraft/getEventStream",
            request_serializer=minecraft__pb2.EventStreamRequest.SerializeToString,
            response_deserializer=minecraft__pb2.Event.FromString,
            _registered_method=True,
        )


class MinecraftServicer(object):
    """*
    Service functions on Minecraft Server
    """

    def getServerInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def getMaterials(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def getEntityTypes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def runCommand(self, request, context):
        """deprecated, use runCommandWithOptions instead"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def runCommandWithOptions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def postToChat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def accessWorlds(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def getHeight(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def getBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def setBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def setBlocks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def setBlockCube(self, request, context):
        """expect exactly two blocks: opposite corners of cube"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def getPlayers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def setPlayer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def spawnEntity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def setEntity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def getEntities(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def getEventStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_MinecraftServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "getServerInfo": grpc.unary_unary_rpc_method_handler(
            servicer.getServerInfo,
            request_deserializer=minecraft__pb2.ServerInfoRequest.FromString,
            response_serializer=minecraft__pb2.ServerInfoResponse.SerializeToString,
        ),
        "getMaterials": grpc.unary_unary_rpc_method_handler(
            servicer.getMaterials,
            request_deserializer=minecraft__pb2.MaterialRequest.FromString,
            response_serializer=minecraft__pb2.MaterialResponse.SerializeToString,
        ),
        "getEntityTypes": grpc.unary_unary_rpc_method_handler(
            servicer.getEntityTypes,
            request_deserializer=minecraft__pb2.EntityTypeRequest.FromString,
            response_serializer=minecraft__pb2.EntityTypeResponse.SerializeToString,
        ),
        "runCommand": grpc.unary_unary_rpc_method_handler(
            servicer.runCommand,
            request_deserializer=minecraft__pb2.CommandRequest.FromString,
            response_serializer=minecraft__pb2.Status.SerializeToString,
        ),
        "runCommandWithOptions": grpc.unary_unary_rpc_method_handler(
            servicer.runCommandWithOptions,
            request_deserializer=minecraft__pb2.CommandRequest.FromString,
            response_serializer=minecraft__pb2.CommandResponse.SerializeToString,
        ),
        "postToChat": grpc.unary_unary_rpc_method_handler(
            servicer.postToChat,
            request_deserializer=minecraft__pb2.ChatPostRequest.FromString,
            response_serializer=minecraft__pb2.Status.SerializeToString,
        ),
        "accessWorlds": grpc.unary_unary_rpc_method_handler(
            servicer.accessWorlds,
            request_deserializer=minecraft__pb2.WorldRequest.FromString,
            response_serializer=minecraft__pb2.WorldResponse.SerializeToString,
        ),
        "getHeight": grpc.unary_unary_rpc_method_handler(
            servicer.getHeight,
            request_deserializer=minecraft__pb2.HeightRequest.FromString,
            response_serializer=minecraft__pb2.HeightResponse.SerializeToString,
        ),
        "getBlock": grpc.unary_unary_rpc_method_handler(
            servicer.getBlock,
            request_deserializer=minecraft__pb2.BlockRequest.FromString,
            response_serializer=minecraft__pb2.BlockResponse.SerializeToString,
        ),
        "setBlock": grpc.unary_unary_rpc_method_handler(
            servicer.setBlock,
            request_deserializer=minecraft__pb2.Block.FromString,
            response_serializer=minecraft__pb2.Status.SerializeToString,
        ),
        "setBlocks": grpc.unary_unary_rpc_method_handler(
            servicer.setBlocks,
            request_deserializer=minecraft__pb2.Blocks.FromString,
            response_serializer=minecraft__pb2.Status.SerializeToString,
        ),
        "setBlockCube": grpc.unary_unary_rpc_method_handler(
            servicer.setBlockCube,
            request_deserializer=minecraft__pb2.Blocks.FromString,
            response_serializer=minecraft__pb2.Status.SerializeToString,
        ),
        "getPlayers": grpc.unary_unary_rpc_method_handler(
            servicer.getPlayers,
            request_deserializer=minecraft__pb2.PlayerRequest.FromString,
            response_serializer=minecraft__pb2.PlayerResponse.SerializeToString,
        ),
        "setPlayer": grpc.unary_unary_rpc_method_handler(
            servicer.setPlayer,
            request_deserializer=minecraft__pb2.Player.FromString,
            response_serializer=minecraft__pb2.Status.SerializeToString,
        ),
        "spawnEntity": grpc.unary_unary_rpc_method_handler(
            servicer.spawnEntity,
            request_deserializer=minecraft__pb2.Entity.FromString,
            response_serializer=minecraft__pb2.SpawnedEntityResponse.SerializeToString,
        ),
        "setEntity": grpc.unary_unary_rpc_method_handler(
            servicer.setEntity,
            request_deserializer=minecraft__pb2.Entity.FromString,
            response_serializer=minecraft__pb2.Status.SerializeToString,
        ),
        "getEntities": grpc.unary_unary_rpc_method_handler(
            servicer.getEntities,
            request_deserializer=minecraft__pb2.EntityRequest.FromString,
            response_serializer=minecraft__pb2.EntityResponse.SerializeToString,
        ),
        "getEventStream": grpc.unary_stream_rpc_method_handler(
            servicer.getEventStream,
            request_deserializer=minecraft__pb2.EventStreamRequest.FromString,
            response_serializer=minecraft__pb2.Event.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "protocol.Minecraft", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers("protocol.Minecraft", rpc_method_handlers)


# This class is part of an EXPERIMENTAL API.
class Minecraft(object):
    """*
    Service functions on Minecraft Server
    """

    @staticmethod
    def getServerInfo(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/protocol.Minecraft/getServerInfo",
            minecraft__pb2.ServerInfoRequest.SerializeToString,
            minecraft__pb2.ServerInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def getMaterials(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/protocol.Minecraft/getMaterials",
            minecraft__pb2.MaterialRequest.SerializeToString,
            minecraft__pb2.MaterialResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def getEntityTypes(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/protocol.Minecraft/getEntityTypes",
            minecraft__pb2.EntityTypeRequest.SerializeToString,
            minecraft__pb2.EntityTypeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def runCommand(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/protocol.Minecraft/runCommand",
            minecraft__pb2.CommandRequest.SerializeToString,
            minecraft__pb2.Status.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def runCommandWithOptions(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/protocol.Minecraft/runCommandWithOptions",
            minecraft__pb2.CommandRequest.SerializeToString,
            minecraft__pb2.CommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def postToChat(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/protocol.Minecraft/postToChat",
            minecraft__pb2.ChatPostRequest.SerializeToString,
            minecraft__pb2.Status.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def accessWorlds(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/protocol.Minecraft/accessWorlds",
            minecraft__pb2.WorldRequest.SerializeToString,
            minecraft__pb2.WorldResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def getHeight(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/protocol.Minecraft/getHeight",
            minecraft__pb2.HeightRequest.SerializeToString,
            minecraft__pb2.HeightResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def getBlock(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/protocol.Minecraft/getBlock",
            minecraft__pb2.BlockRequest.SerializeToString,
            minecraft__pb2.BlockResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def setBlock(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/protocol.Minecraft/setBlock",
            minecraft__pb2.Block.SerializeToString,
            minecraft__pb2.Status.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def setBlocks(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/protocol.Minecraft/setBlocks",
            minecraft__pb2.Blocks.SerializeToString,
            minecraft__pb2.Status.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def setBlockCube(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/protocol.Minecraft/setBlockCube",
            minecraft__pb2.Blocks.SerializeToString,
            minecraft__pb2.Status.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def getPlayers(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/protocol.Minecraft/getPlayers",
            minecraft__pb2.PlayerRequest.SerializeToString,
            minecraft__pb2.PlayerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def setPlayer(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/protocol.Minecraft/setPlayer",
            minecraft__pb2.Player.SerializeToString,
            minecraft__pb2.Status.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def spawnEntity(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/protocol.Minecraft/spawnEntity",
            minecraft__pb2.Entity.SerializeToString,
            minecraft__pb2.SpawnedEntityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def setEntity(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/protocol.Minecraft/setEntity",
            minecraft__pb2.Entity.SerializeToString,
            minecraft__pb2.Status.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def getEntities(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/protocol.Minecraft/getEntities",
            minecraft__pb2.EntityRequest.SerializeToString,
            minecraft__pb2.EntityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def getEventStream(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_stream(
            request,
            target,
            "/protocol.Minecraft/getEventStream",
            minecraft__pb2.EventStreamRequest.SerializeToString,
            minecraft__pb2.Event.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )
